{"version":3,"file":"component---src-templates-stage-template-tsx-2d0e0def4f38aee50cbb.js","mappings":"gLAGe,SAASA,EAAQC,GAAa,IAAZ,MAAEC,GAAOD,EAExC,OADAE,QAAQC,IAAI,QAAQF,GAElBG,EAAAA,cAAAA,EAAAA,SAAA,KACGH,EAAMI,KAAKC,GACVF,EAAAA,cAAA,OAAKG,UAAU,gGACbH,EAAAA,cAAA,OAAKG,UAAU,uDACbH,EAAAA,cAAA,YAAOE,EAAKE,KAAKC,OAAOC,OAE1BN,EAAAA,cAACO,EAAAA,KAAI,CAACC,GAAE,IAAMN,EAAKE,KAAKC,OAAOI,MAC7BT,EAAAA,cAAA,MAAIG,UAAU,kBAAkBD,EAAKE,KAAKC,OAAOK,QAEnDV,EAAAA,cAAA,KAAGG,UAAU,uBACVD,EAAKE,KAAKO,SAAWT,EAAKE,KAAKQ,YAAYC,gBASxD,C,yECwCA,UAtDsBjB,IAAkC,IAAjC,KAAEkB,EAAI,YAAEC,GAAoBnB,EACjD,MAAM,MAAEC,GAAUiB,EAAKE,QACjB,MACJC,EAAK,KACLR,EAAI,YACJS,EAAW,aACXC,EAAY,aACZC,EAAY,YACZC,EAAW,YACXC,GACEP,EACEQ,EACJL,EAAc,EACPD,EAAK,WAAWC,EAAW,MAAMM,EAAAA,WACjCP,EAAK,MAAMO,EAAAA,WAEpB,OACExB,EAAAA,cAACyB,EAAAA,EAAM,CAACf,MAAOa,GACbvB,EAAAA,cAAA,OAAKG,UAAU,uCACbH,EAAAA,cAAA,MAAIG,UAAU,gEACXc,IAGLjB,EAAAA,cAACL,EAAAA,EAAQ,CAACE,MAAOA,IASV,C","sources":["webpack://obsidian-starter/./src/components/ListNote.tsx","webpack://obsidian-starter/./src/templates/stage-template.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport default function ListNote({ edges }) {\n  console.log('edges',edges)\n  return (\n    <>\n      {edges.map((edge) => (\n        <div className=\"col-span-12 md:col-span-6 my-2 py-4 md:my-0 border-color-slate-200 border-b last:border-none\">\n          <div className=\"items-center uppercase leading-relaxed text-sunglow\">\n            <time>{edge.node.fields.date}</time>\n          </div>\n          <Link to={`/${edge.node.fields.slug}`}>\n            <h2 className=\"underline my-2\">{edge.node.fields.title}</h2>\n          </Link>\n          <p className=\"mb-2 text-lightgrey\">\n            {edge.node.excerpt || edge.node.frontmatter.description}\n          </p>\n          {/* <small className=\"bg-dimgrey text-yellow text-xs tracking-normal uppercase rounded-lg px-2 py-1 my-2\">\n            {edge.node.fields.stage}\n          </small> */}\n        </div>\n      ))}\n    </>\n  );\n}\n","import Layout from \"@/components/Layout\";\nimport React from \"react\";\nimport ListNote from \"@/components/ListNote\";\nimport { graphql } from \"gatsby\";\nimport { SITE_TITLE } from \"../../config\";\n\ntype Props = {\n  data: AllMdx;\n  pageContext: PageContext;\n};\n\nconst StageTemplate = ({ data, pageContext }: Props) => {\n  const { edges } = data.allMdx;\n  const {\n    stage,\n    slug,\n    currentPage,\n    prevPagePath,\n    nextPagePath,\n    hasPrevPage,\n    hasNextPage,\n  } = pageContext;\n  const pageTitle =\n    currentPage > 0\n      ? `${stage} - Page ${currentPage} - ${SITE_TITLE}`\n      : `${stage} - ${SITE_TITLE}`;\n\n  return (\n    <Layout title={pageTitle}>\n      <div className=\"my-2 py-4 border-b border-slate-200\">\n        <h1 className=\"capitalize inline-block mr-2 text-5xl md:text-7xl font-black\">\n          {stage}\n        </h1>\n      </div>\n      <ListNote edges={edges} />\n      {/* {(hasPrevPage || hasNextPage) && (\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      )} */}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query StagePage($stage: String) {\n    allMdx(\n      filter: {\n        frontmatter: { publish: { ne: false } }\n        fields: { stage: { eq: $stage } }\n      }\n      sort: { order: DESC, fields: fields___date }\n    ) {\n      edges {\n        node {\n          ...postList\n        }\n      }\n    }\n  }\n`;\n\nexport default StageTemplate;\n"],"names":["ListNote","_ref","edges","console","log","React","map","edge","className","node","fields","date","Link","to","slug","title","excerpt","frontmatter","description","data","pageContext","allMdx","stage","currentPage","prevPagePath","nextPagePath","hasPrevPage","hasNextPage","pageTitle","SITE_TITLE","Layout"],"sourceRoot":""}